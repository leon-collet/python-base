# Задание 3. Генератор объединения двух списков
# Есть два списка:
#
# ```
# tutors = [
#         'Иван', 'Анастасия', 'Петр', 'Сергей',
#         'Дмитрий', 'Борис', 'Елена'
# ]
# klasses = [
#         '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А'
# ]
# ```
# Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
#
# ('Иван', '9А')
# ('Анастасия', '7В')
# ...
#
# Количество генерируемых кортежей должно быть равно длине списка tutors. Если в списке klasses меньше элементов,
# чем в списке tutors, необходимо вывести последние кортежи в виде: (<tutor>, None), например:
# ```('Станислав', None)```
# Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения. Подумать, в каких ситуациях
# генератор даст эффект.

tutors = [
        'Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена'
]
klasses = [
        '9А', '7В', '9Б', '9В', '8Б'
]


def list_gen(min_len):
    if len(tutors) > min_len:
        dop_list = [None for i in tutors[min_len:]]
        klasses.extend(dop_list)
    for name, klass in zip(tutors, klasses):
        yield name, klass


generator = list_gen(len(klasses))

for i in tutors:
    print(next(generator))

print(type(generator))
print(type(list_gen(len(klasses))))